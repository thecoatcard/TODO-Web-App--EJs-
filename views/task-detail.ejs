<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>
        <%= task.title %>
    </title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');

        body {
            font-family: 'Inter', sans-serif;
        }
    </style>

</head>

<body class="bg-gray-100 text-gray-800">

    <div class="max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

        <header
            class="flex items-center justify-between py-5 px-6 mb-8 bg-white rounded-2xl shadow-lg border border-gray-200">
            <div>
                <a href="/" class="text-2xl font-bold text-gray-900">
                    Task Manager
                </a>
            </div>
            <div class="flex items-center gap-4">
                <span class="font-medium text-gray-600">Welcome, <%= user.displayName %></span>
                <a href="/auth/logout"
                    class="font-semibold text-white py-2 px-4 rounded-lg bg-gray-700 hover:bg-gray-800 transition-all">
                    Logout
                </a>
            </div>
        </header>

        <div class="w-full p-6 sm:p-8 bg-white rounded-2xl shadow-lg border border-gray-200">
            <% const deadline=new Date(task.deadline); const isCompleted=task.status==='Completed' ; %>

                <div class="mb-8">
                    <h1
                        class="text-4xl lg:text-5xl font-bold text-gray-900 <% if(isCompleted) { %> line-through opacity-60 <% } %>">
                        <%= task.title %>
                    </h1>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                    <div class="p-4 bg-gray-50 rounded-lg border border-gray-200">
                        <div class="flex items-center gap-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" style="color: #A78BFA;" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                            </svg>
                            <div>
                                <p class="text-sm text-gray-500">Deadline</p>
                                <p class="font-bold text-lg text-gray-900">
                                    <%= deadline.toLocaleDateString('en-US', { month: 'long' , day: 'numeric' ,
                                        year: 'numeric' }) %>
                                </p>
                            </div>
                        </div>
                        <p id="countdown" class="text-sm font-semibold mt-2" data-deadline="<%= task.deadline %>"
                            data-status="<%= task.status %>"></p>
                    </div>
                    <div class="p-4 bg-gray-50 rounded-lg border border-gray-200">
                        <div class="flex items-center gap-3">
                            <% if(isCompleted) { %>
                                <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" style="color: #34D399;"
                                    fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                        d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                                </svg>
                                <% } else { %>
                                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" style="color: #FCD34D;"
                                        fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                            d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                                    </svg>
                                    <% } %>
                                        <div>
                                            <p class="text-sm text-gray-500">Status</p>
                                            <p class="font-bold text-lg text-gray-900">
                                                <%= task.status %>
                                            </p>
                                        </div>
                        </div>
                    </div>
                    <div class="p-4 bg-gray-50 rounded-lg border border-gray-200">
                        <div class="flex items-center gap-3">
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                                    d="M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v.01" />
                            </svg>
                            <div>
                                <p class="text-sm text-gray-500">Created On</p>
                                <p class="font-bold text-lg text-gray-900">
                                    <%= new Date(task.createdAt).toLocaleDateString('en-US', { month: 'long' ,
                                        day: 'numeric' }) %>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="mb-8 p-6 bg-gray-50 rounded-lg border border-gray-200">
                    <h2 class="text-xl font-bold text-gray-900 mb-3">Task Details</h2>
                    <p class="text-gray-700 text-base whitespace-pre-wrap leading-relaxed">
                        <%= task.description %>
                    </p>
                </div>

                <div class="flex flex-col sm:flex-row items-center justify-between gap-4">
                    <a href="/" style="background-color: #A78BFA;"
                        class="font-bold w-full sm:w-auto text-white text-center py-3 px-6 rounded-lg hover:opacity-90 transition-opacity">
                        &larr; Back to Dashboard
                    </a>
                    <div class="flex items-center gap-4 w-full sm:w-auto">
                        <form action="/status/<%= task._id %>" method="post" class="w-full">
                            <button type="submit"
                                class="flex w-full justify-center items-center gap-2 font-bold py-3 px-4 rounded-md transition-all <% if(isCompleted) { %> bg-yellow-100 text-yellow-800 hover:bg-yellow-200 border border-yellow-200 <% } else { %> bg-green-100 text-green-800 hover:bg-green-200 border border-green-200 <% } %>">
                                <% if(isCompleted) { %><span>Mark as Pending</span>
                                    <% } else { %><svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none"
                                            viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="3"
                                                d="M5 13l4 4L19 7" />
                                        </svg><span>Mark as Complete</span>
                                        <% } %>
                            </button>
                        </form>
                        <a href="/delete/<%= task._id %>"
                            class="font-bold text-center w-full sm:w-auto py-3 px-4 rounded-lg transition-all"
                            style="background-color:#FEE2E2; color:#B91C1C;">
                            Delete
                        </a>
                    </div>
                </div>
        </div>
    </div>

    <script>
        const countdownElement = document.getElementById('countdown');
        const deadline = new Date(countdownElement.dataset.deadline);
        const status = countdownElement.dataset.status;
        function updateCountdown() {
            if (status === 'Completed') {
                countdownElement.innerHTML = '<span>üéâ</span> Completed!';
                countdownElement.className = 'text-sm font-semibold mt-2 text-green-600'; // Updated color
                return;
            }
            const now = new Date();
            const diff = deadline.getTime() - now.getTime();
            if (diff <= 0) {
                countdownElement.innerHTML = '<span>üî•</span> Deadline has passed!';
                countdownElement.className = 'text-sm font-semibold mt-2 text-red-600'; // Updated color
                return;
            }
            const days = Math.floor(diff / (1000 * 60 * 60 * 24));
            const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
            const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));
            let countdownText = '<span>‚è≥</span> Time Left: ';
            if (days > 0) countdownText += `${days}d `;
            if (hours > 0) countdownText += `${hours}h `;
            countdownText += `${minutes}m`;
            countdownElement.innerHTML = countdownText;
            // Use yellow for under 2 days, otherwise use a neutral gray
            countdownElement.className = days < 2 ? 'text-sm font-semibold mt-2 text-yellow-600' : 'text-sm font-semibold mt-2 text-gray-600'; // Updated colors
            requestAnimationFrame(updateCountdown);
        }
        updateCountdown();
    </script>
</body>

</html>